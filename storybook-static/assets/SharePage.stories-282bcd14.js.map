{"version":3,"file":"SharePage.stories-282bcd14.js","sources":["../../node_modules/@remix-run/router/dist/router.js","../../node_modules/react-router/dist/index.js","../../node_modules/react-router-dom/dist/index.js","../../src/components/Share/Navbar.jsx","../../src/styles/blind.js","../../src/img/LinkIcon.svg","../../src/components/Share/Main.jsx","../../src/pages/ShagePage.jsx","../../node_modules/storybook-addon-react-router-v6/dist/index.mjs"],"sourcesContent":["/**\n * @remix-run/router v1.5.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n\n  function getCurrentLocation() {\n    return entries[index];\n  }\n\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getCurrentLocation();\n    },\n\n    createHref,\n\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    }, // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\n\n\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\n\n\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\n\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\n\nfunction parsePath(path) {\n  let parsedPath = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex(); // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location); // try...catch because iOS limits us to 100 pushState calls :/\n\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n\n  let history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n\n    createHref(to) {\n      return createHref(window, to);\n    },\n\n    createURL,\n\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n\n    push,\n    replace,\n\n    go(n) {\n      return globalHistory.go(n);\n    }\n\n  };\n  return history;\n} //#endregion\n\nvar ResultType;\n\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\n\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\n\nfunction isIndexRoute(route) {\n  return route.index === true;\n} // Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\n\n\nfunction convertRoutesToDataRoutes(routes, detectErrorBoundary, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  if (manifest === void 0) {\n    manifest = {};\n  }\n\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, {\n        hasErrorBoundary: detectErrorBoundary(route),\n        id\n      });\n\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, {\n        id,\n        hasErrorBoundary: detectErrorBoundary(route),\n        children: undefined\n      });\n\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, detectErrorBoundary, treePath, manifest);\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\n\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n\n  return matches;\n}\n\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta); // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n\n    if (route.children && route.children.length > 0) {\n      invariant( // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    } // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n\n\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n\n  routes.forEach((route, index) => {\n    var _route$path;\n\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\n\n\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments; // Optional path segments are denoted by a trailing `?`\n\n  let isOptional = first.endsWith(\"?\"); // Compute the corresponding required segment: `foo?` -> `foo`\n\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = []; // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\"))); // Then if this is an optional value, add all child versions without\n\n  if (isOptional) {\n    result.push(...restExploded);\n  } // for absolute paths, ensure `/` instead of empty segment\n\n\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\n\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\n\nconst isSplat = s => s === \"*\";\n\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\n\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ? // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\n\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\n\n\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  let path = originalPath;\n\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  } // ensure `/` is added at the beginning if the path is absolute\n\n\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1; // only apply the splat if it's the last segment\n\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      const starParam = params[star]; // Apply the splat\n\n      return starParam;\n    }\n\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n\n      if (optional === \"?\") {\n        return param == null ? \"\" : param;\n      }\n\n      if (param == null) {\n        invariant(false, \"Missing \\\":\" + key + \"\\\" param\");\n      }\n\n      return param;\n    } // Remove any optional markers from optional static segments\n\n\n    return segment.replace(/\\?$/g, \"\");\n  }) // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\n\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n\n  if (end === void 0) {\n    end = true;\n  }\n\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\n\n\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  } // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n\n\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\n\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\n\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\n\n\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\n\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n\n  let to;\n\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from; // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\"); // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    } // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n\n\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from); // Ensure the pathname has a trailing slash if the original \"to\" had one\n\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\"); // Or if this was a link to the current path which has a trailing slash\n\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n/**\n * @private\n */\n\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\n\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\n\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\n\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\n\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\n\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\"); // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key); // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, null, data), error => this.onSettle(promise, key, error)); // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal) {\n    let aborted = false;\n\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n\n}\n\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\n\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n\n  return value._data;\n}\n\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\n\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\n\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\n\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n\nconst defaultDetectErrorBoundary = route => Boolean(route.hasErrorBoundary); //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\n\n\nfunction createRouter(init) {\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let detectErrorBoundary = init.detectErrorBoundary || defaultDetectErrorBoundary; // Routes keyed by ID\n\n  let manifest = {}; // Routes in tree format for matching\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, detectErrorBoundary, undefined, manifest);\n  let inFlightDataRoutes; // Config driven behavior flags\n\n  let future = _extends({\n    v7_normalizeFormMethod: false\n  }, init.future); // Cleanup function for history\n\n\n  let unlistenHistory = null; // Externally-provided functions to call on all state changes\n\n  let subscribers = new Set(); // Externally-provided object to hold scroll restoration locations during routing\n\n  let savedScrollPositions = null; // Externally-provided function to get scroll restoration keys\n\n  let getScrollRestorationKey = null; // Externally-provided function to get current scroll position\n\n  let getScrollPosition = null; // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, init.basename);\n  let initialErrors = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n\n  let initialized = // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && ( // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  }; // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n\n  let pendingAction = Action.Pop; // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n\n  let pendingPreventScrollReset = false; // AbortController for the active navigation\n\n  let pendingNavigationController; // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n\n  let isUninterruptedRevalidation = false; // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n\n  let isRevalidationRequired = false; // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n\n  let cancelledDeferredRoutes = []; // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n\n  let cancelledFetcherLoads = []; // AbortControllers for any in-flight fetchers\n\n  let fetchControllers = new Map(); // Track loads based on the order in which they started\n\n  let incrementingLoadId = 0; // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n\n  let pendingNavigationLoadId = -1; // Fetchers that triggered data reloads as a result of their actions\n\n  let fetchReloadIds = new Map(); // Fetchers that triggered redirect navigations from their actions\n\n  let fetchRedirectIds = new Set(); // Most recent href/match for fetcher.load calls for fetchers\n\n  let fetchLoadMatches = new Map(); // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n\n  let activeDeferreds = new Map(); // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n\n  let blockerFunctions = new Map(); // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n\n  let ignoreNextHistoryUpdate = false; // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1); // Put the blocker into a blocked state\n\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            }); // Re-do the same POP navigation we just blocked\n\n            init.history.go(delta);\n          },\n\n          reset() {\n            deleteBlocker(blockerKey);\n            updateState({\n              blockers: new Map(router.state.blockers)\n            });\n          }\n\n        });\n        return;\n      }\n\n      return startNavigation(historyAction, location);\n    }); // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n\n    return router;\n  } // Clean up a router and it's side effects\n\n\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  } // Subscribe to state updates for the router\n\n\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  } // Update our state and notify the calling context of the change\n\n\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  } // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n\n\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    } // Always preserve any existing loaderData from re-used routes\n\n\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData; // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    } // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n\n\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers: new Map(state.blockers)\n    }));\n\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    } // Reset stateful navigation vars\n\n\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  } // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n\n\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(to, future, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state); // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          }); // Send the same navigation through\n\n          navigate(to, opts);\n        },\n\n        reset() {\n          deleteBlocker(blockerKey);\n          updateState({\n            blockers: new Map(state.blockers)\n          });\n        }\n\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  } // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n\n\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    }); // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n\n    if (state.navigation.state === \"submitting\") {\n      return;\n    } // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n\n\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    } // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n\n\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  } // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n\n\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true; // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, init.basename); // Short circuit with a 404 on the root error boundary if we match nothing\n\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse); // Cancel all pending deferred on 404s since we don't keep any routes\n\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    } // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n\n\n    if (isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    } // Create a controller/Request for this navigation\n\n\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation = _extends({\n        state: \"loading\",\n        location\n      }, opts.submission);\n\n      loadingNavigation = navigation; // Create a GET request for the loaders\n\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    } // Call loaders\n\n\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n\n    if (shortCircuited) {\n      return;\n    } // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n\n\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  } // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n\n\n  async function handleAction(request, location, submission, matches, opts) {\n    interruptActiveLoads(); // Put us in a submitting state\n\n    let navigation = _extends({\n      state: \"submitting\",\n      location\n    }, submission);\n\n    updateState({\n      navigation\n    }); // Call our action and get the result\n\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, detectErrorBoundary, router.basename);\n\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace;\n\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id); // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  } // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n\n\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n\n    if (!loadingNavigation) {\n      let navigation = _extends({\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined\n      }, submission);\n\n      loadingNavigation = navigation;\n    } // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n\n\n    let activeSubmission = submission || fetcherSubmission ? submission || fetcherSubmission : loadingNavigation.formMethod && loadingNavigation.formAction && loadingNavigation.formData && loadingNavigation.formEncType ? {\n      formMethod: loadingNavigation.formMethod,\n      formAction: loadingNavigation.formAction,\n      formData: loadingNavigation.formData,\n      formEncType: loadingNavigation.formEncType\n    } : undefined;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, init.basename, pendingActionData, pendingError); // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId)); // Short circuit if we have no loaders to run\n\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    } // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n\n\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach(rf => fetchControllers.set(rf.key, pendingNavigationController));\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    } // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n\n\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key)); // If any loaders returned a redirect Response, start a new REPLACE navigation\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds); // Wire up subscribers to update loaderData as promises settle\n\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    return _extends({\n      loaderData,\n      errors\n    }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  } // Trigger a fetcher load/submit for the given fetcher key\n\n\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = matchRoutes(routesToUse, href, init.basename);\n\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: href\n      }));\n      return;\n    }\n\n    let {\n      path,\n      submission\n    } = normalizeNavigateOptions(href, future, opts, true);\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    } // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n\n\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  } // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n\n\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    } // Put this fetcher into it's submitting state\n\n\n    let existingFetcher = state.fetchers.get(key);\n\n    let fetcher = _extends({\n      state: \"submitting\"\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the action for the fetcher\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, detectErrorBoundary, router.basename);\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n\n      let loadingFetcher = _extends({\n        state: \"loading\"\n      }, submission, {\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true\n      });\n\n      state.fetchers.set(key, loadingFetcher);\n      updateState({\n        fetchers: new Map(state.fetchers)\n      });\n      return startRedirectNavigation(state, actionResult, {\n        submission,\n        isFetchActionRedirect: true\n      });\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    } // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n\n\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, init.basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = _extends({\n      state: \"loading\",\n      data: actionResult.data\n    }, submission, {\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, init.basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    ); // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = {\n        state: \"loading\",\n        data: existingFetcher && existingFetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      fetchControllers.set(staleKey, abortController);\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    } // Process and commit output from loaders\n\n\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    let doneFetcher = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId); // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  } // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n\n\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key); // Put this fetcher into it's loading state\n\n    let loadingFetcher = _extends({\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined\n    }, submission, {\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true\n    });\n\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    }); // Call the loader for this fetcher route match\n\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, detectErrorBoundary, router.basename); // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    } // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n\n\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    } // If the loader threw a redirect Response, start a new REPLACE navigation\n\n\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    } // Process any non-redirect errors thrown\n\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key); // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\"); // Put the fetcher back into an idle state\n\n    let doneFetcher = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n\n\n  async function startRedirectNavigation(state, redirect, _temp) {\n    var _window;\n\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\"); // Check if this an absolute external redirect that goes to a new origin\n\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser && typeof ((_window = window) == null ? void 0 : _window.location) !== \"undefined\") {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, init.basename || \"/\") == null;\n\n      if (window.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n\n        return;\n      }\n    } // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n\n\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push; // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n\n    let {\n      formMethod,\n      formAction,\n      formEncType,\n      formData\n    } = state.navigation;\n\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData\n      };\n    } // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n\n\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && submission && isMutationMethod(submission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, submission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined\n        },\n        fetcherSubmission: submission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, detectErrorBoundary, router.basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, request.signal), f.match, f.matches, manifest, detectErrorBoundary, router.basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, request.signal, false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, request.signal, true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true; // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds()); // Abort in-flight fetcher loads\n\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  } // Utility function to update blockers, ensuring valid state transitions\n\n\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER; // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    state.blockers.set(key, newBlocker);\n    updateState({\n      blockers: new Map(state.blockers)\n    });\n  }\n\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n\n    if (blockerFunctions.size === 0) {\n      return;\n    } // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n\n\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    } // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n\n\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  } // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n\n\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n\n    getScrollRestorationKey = getKey || (location => location.key); // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n\n\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map(m => createUseMatchesMatch(m, state.loaderData));\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes) {\n    inFlightDataRoutes = newRoutes;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n\n    get state() {\n      return state;\n    },\n\n    get routes() {\n      return dataRoutes;\n    },\n\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let detectErrorBoundary = (opts == null ? void 0 : opts.detectErrorBoundary) || defaultDetectErrorBoundary;\n  let dataRoutes = convertRoutesToDataRoutes(routes, detectErrorBoundary, undefined, manifest);\n  let basename = (opts ? opts.basename : null) || \"/\";\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n\n    if (isResponse(result)) {\n      return result;\n    } // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n\n\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n\n\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename); // SSR supports HEAD requests while SPA doesn't\n\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext, match);\n\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    } // Pick off the right state value to return\n\n\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      var _result$activeDeferre;\n\n      let data = Object.values(result.loaderData)[0];\n\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n\n        return e.response;\n      } // Redirects are always returned since they don't propagate to catch\n      // boundaries\n\n\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n\n      throw e;\n    }\n  }\n\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, detectErrorBoundary, basename, true, isRouteRequest, requestContext);\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n\n      if (isRouteRequest) {\n        throw error;\n      }\n\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      }); // action status codes take precedence over loader status codes\n\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    } // Create a GET request for the loaders\n\n\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null; // Short circuit if we have no loaders to run (queryRoute())\n\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy); // Short circuit if we have no loaders to run (query())\n\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, detectErrorBoundary, basename, true, isRouteRequest, requestContext))]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    } // Process and commit output from loaders\n\n\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds); // Add a null for any non-loader matches for proper revalidation on the client\n\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\n\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n\n  return newContext;\n}\n\nfunction isSubmissionNavigation(opts) {\n  return opts != null && \"formData\" in opts;\n} // Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\n\n\nfunction normalizeNavigateOptions(to, future, opts, isFetcher) {\n  if (isFetcher === void 0) {\n    isFetcher = false;\n  }\n\n  let path = typeof to === \"string\" ? to : createPath(to); // Return location verbatim on non-submission navigations\n\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  } // Create a Submission on non-GET navigations\n\n\n  let submission;\n\n  if (opts.formData) {\n    let formMethod = opts.formMethod || \"get\";\n    submission = {\n      formMethod: future.v7_normalizeFormMethod ? formMethod.toUpperCase() : formMethod.toLowerCase(),\n      formAction: stripHashFromPath(path),\n      formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n      formData: opts.formData\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return {\n        path,\n        submission\n      };\n    }\n  } // Flatten submission onto URLSearchParams for GET submissions\n\n\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData); // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n} // Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\n\n\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  let defaultShouldRevalidate = // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n  isRevalidationRequired || // Clicked the same link, resubmitted a GET form\n  currentUrl.toString() === nextUrl.toString() || // Search params affect all loaders\n  currentUrl.search !== nextUrl.search; // Pick navigation matches that are net-new or qualify for revalidation\n\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n\n    if (match.route.loader == null) {\n      return false;\n    } // Always call the loader on new route instances and pending defer cancellations\n\n\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    } // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n\n\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate: defaultShouldRevalidate || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  }); // Pick fetcher.loads that need to be revalidated\n\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename); // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData\n\n    if (!fetcherMatches) {\n      revalidatingFetchers.push(_extends({\n        key\n      }, f, {\n        matches: null,\n        match: null\n      }));\n      return;\n    }\n\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    if (cancelledFetcherLoads.includes(key)) {\n      revalidatingFetchers.push(_extends({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch\n      }, f));\n      return;\n    } // Revalidating fetchers are decoupled from the route matches since they\n    // hit a static href, so they _always_ check shouldRevalidate and the\n    // default is strictly if a revalidation is explicitly required (action\n    // submissions, useRevalidator, X-Remix-Revalidate).\n\n\n    let shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n      currentUrl,\n      currentParams: state.matches[state.matches.length - 1].params,\n      nextUrl,\n      nextParams: matches[matches.length - 1].params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate\n    }));\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push(_extends({\n        key,\n        matches: fetcherMatches,\n        match: fetcherMatch\n      }, f));\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew = // [a] -> [a, b]\n  !currentMatch || // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id; // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n\n  let isMissingData = currentLoaderData[match.route.id] === undefined; // Always load if this is a net-new route or we don't yet have data\n\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (// param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\n\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\n\n\nasync function loadLazyRouteModule(route, detectErrorBoundary, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy(); // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\"); // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n\n  let routeUpdates = {};\n\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined && // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  } // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to detectErrorBoundary\n\n\n  Object.assign(routeToUpdate, routeUpdates); // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `detectErrorBoundary` function to set the `hasErrorBoundary` route\n    // property since the logic will differ between frameworks.\n    hasErrorBoundary: detectErrorBoundary(_extends({}, routeToUpdate)),\n    lazy: undefined\n  });\n}\n\nasync function callLoaderOrAction(type, request, match, matches, manifest, detectErrorBoundary, basename, isStaticRequest, isRouteRequest, requestContext) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n\n  if (isStaticRequest === void 0) {\n    isStaticRequest = false;\n  }\n\n  if (isRouteRequest === void 0) {\n    isRouteRequest = false;\n  }\n\n  let resultType;\n  let result;\n  let onReject;\n\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n\n    onReject = () => reject();\n\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: requestContext\n    }), abortPromise]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, detectErrorBoundary, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, detectErrorBoundary, manifest);\n        handler = match.route[type];\n\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname: new URL(request.url).pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else {\n      invariant(handler, \"Could not find the \" + type + \" to run on the \\\"\" + match.route.id + \"\\\" route\");\n      result = await runHandler(handler);\n    }\n\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status; // Process redirects\n\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\"); // Support relative routing in internal redirects\n\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(match => match.pathnameBase);\n        let resolvedLocation = resolveTo(location, routePathnames, new URL(request.url).pathname);\n        invariant(createPath(resolvedLocation), \"Unable to resolve redirect location: \" + location); // Prepend the basename to the redirect location if we have one\n\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname = path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      } // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n\n\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    } // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n\n\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n\n    let data;\n    let contentType = result.headers.get(\"Content-Type\"); // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n\n  return {\n    type: ResultType.data,\n    data: result\n  };\n} // Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\n\n\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType,\n      formData\n    } = submission; // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n\n    init.method = formMethod.toUpperCase();\n    init.body = formEncType === \"application/x-www-form-urlencoded\" ? convertFormDataToSearchParams(formData) : formData;\n  } // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {}; // Process loader results into state.loaderData/state.errors\n\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error; // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {}; // Prefer higher error values if lower errors bubble to the same boundary\n\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      } // Clear our any prior loaderData for the throwing route\n\n\n      loaderData[id] = undefined; // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      } // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n\n\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  }); // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\n\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds); // Process results from our revalidating fetchers\n\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index]; // Process fetcher non-redirect errors\n\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return {\n    loaderData,\n    errors\n  };\n}\n\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n\n  for (let match of matches) {\n    let id = match.route.id;\n\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n\n  return mergedLoaderData;\n} // Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\n\n\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\n\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\n\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n} // Find any returned redirect errors, starting from the lowest match\n\n\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\n\nfunction isHashChangeOnly(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash;\n}\n\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\n\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\n\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\n\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\n\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\n\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signal, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index]; // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n\n  let aborted = await result.deferredData.resolveData(signal);\n\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\n\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n} // Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\n\n\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\n\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  } // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n\n\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n} //#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.10.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  const value = getSnapshot();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\n\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\n\nconst LocationContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\n\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\n\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n\n  let locationFromContext = useLocation();\n  let location;\n\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase, // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" prop on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"<Route>\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\n\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n\n}\n\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\n\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for the current errors: \" + errors) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = null;\n\n    if (dataRouterState) {\n      if (match.route.ErrorBoundary) {\n        errorElement = /*#__PURE__*/React.createElement(match.route.ErrorBoundary, null);\n      } else if (match.route.errorElement) {\n        errorElement = match.route.errorElement;\n      } else {\n        errorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\n      }\n    }\n\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n\n    let getChildren = () => {\n      let children = outlet;\n\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      }\n\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches\n        },\n        children: children\n      });\n    }; // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n\n\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]); // Prefer the blocker from state since DataRouterContext is memoized so this\n  // ensures we update on blocker state updates\n\n  return state.blockers.get(blockerKey) || blocker;\n}\nconst alreadyWarned = {};\n\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  let getState = React.useCallback(() => router.state, [router]); // Sync router state to our component state to force re-renders\n\n  let state = useSyncExternalStore(router.subscribe, getState, // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  getState);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement))), null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n\n    throw promise;\n  }\n\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction detectErrorBoundary(route) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (route.Component && route.element) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`element` will be ignored.\") : void 0;\n    }\n\n    if (route.ErrorBoundary && route.errorElement) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`errorElement` will be ignored.\") : void 0;\n    }\n  } // Note: this check also occurs in createRoutesFromChildren so update\n  // there if you change this\n\n\n  return Boolean(route.ErrorBoundary) || Boolean(route.errorElement);\n}\n\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: opts == null ? void 0 : opts.future,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    detectErrorBoundary\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, detectErrorBoundary as UNSAFE_detectErrorBoundary, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.10.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_detectErrorBoundary, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, ErrorResponse, stripBasename, UNSAFE_warning, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method: method.toLowerCase(),\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: opts == null ? void 0 : opts.future,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    detectErrorBoundary: UNSAFE_detectErrorBoundary\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: opts == null ? void 0 : opts.future,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    detectErrorBoundary: UNSAFE_detectErrorBoundary\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      let currentUrl = new URL(window.location.href);\n      let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n      let path = stripBasename(targetUrl.pathname, basename);\n\n      if (targetUrl.origin === currentUrl.origin && path != null) {\n        // Strip the protocol/origin/basename for same-origin absolute URLs\n        to = path + targetUrl.search + targetUrl.hash;\n      } else {\n        isExternal = true;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative,\n    preventScrollReset\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      relative,\n      preventScrollReset\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmitImpl\"] = \"useSubmitImpl\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n //#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"../Button\";\r\n\r\nconst Navbar = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<div>\r\n\t\t\t\t<NavLink to={\"/share\"}>공유 일정 확인</NavLink>\r\n\t\t\t\t<NavLink to={\"1234\"}>개인 일정</NavLink>\r\n\t\t\t\t<NavLink to={\"4567\"}>커뮤니티</NavLink>\r\n\t\t\t</div>\r\n\t\t\t<Button\r\n\t\t\t\tlabel={\"공유 페이지 생성\"}\r\n\t\t\t\twidth={137}\r\n\t\t\t\theight={47}\r\n\t\t\t\tfontWeight={500}\r\n\t\t\t\tbackgroundColor={\"#9B9FAA\"}\r\n\t\t\t/>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst Wrapper = styled.nav`\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0 105px 0 76px;\r\n\theight: 77px;\r\n\tborder-bottom: 1px solid #e6e8f6;\r\n\r\n\t& div {\r\n\t\tdisplay: flex;\r\n\t\tgap: 43px;\r\n\t}\r\n\r\n\t& a {\r\n\t\tcolor: ${({ theme }) => theme.colors.textUnSelected};\r\n\t\tfont-size: ${({ theme }) => theme.typography.size.s2 + \"px\"};\r\n\t\tfont-weight: ${({ theme }) => theme.typography.weight.regular};\r\n\r\n\t\t&.active {\r\n\t\t\tcolor: ${({ theme }) => theme.colors.text};\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default Navbar;\r\n","import { css } from \"styled-components\";\r\n\r\nexport const blind = css`\r\n\tposition: absolute;\r\n\tclip: rect(0 0 0 0);\r\n\twidth: 1px;\r\n\theight: 1px;\r\n\tmargin: -1px;\r\n\toverflow: hidden;\r\n`;\r\n","export default \"__VITE_ASSET__7e4be5ac__\"","import styled from \"styled-components\";\r\nimport { Button } from \"@components/Button\";\r\nimport { Select } from \"@components/Select\";\r\nimport { blind } from \"@styles/blind\";\r\nimport { ReactComponent as LinkIcon } from \"@/img/LinkIcon.svg\";\r\n\r\nconst Main = () => {\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<TimeList>\r\n\t\t\t\t<li className=\"active\">월별</li>\r\n\t\t\t\t<li>리스트</li>\r\n\t\t\t</TimeList>\r\n\t\t\t<MainWrapper>\r\n\t\t\t\t<CalendarWrapper>\r\n\t\t\t\t\t<CalendarHeader>\r\n\t\t\t\t\t\t<Select label=\"2023년 4월\" fontSize={23} marginLeft={12} />\r\n\t\t\t\t\t\t<CalendarOptionsWrapper>\r\n\t\t\t\t\t\t\t<UserLists>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<span>user1</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<span>user2</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<span>user3</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t<span>user4</span>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</UserLists>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tlabel={\"사용자 초대\"}\r\n\t\t\t\t\t\t\t\tbackgroundColor={\"#9B9FAA\"}\r\n\t\t\t\t\t\t\t\twidth={89}\r\n\t\t\t\t\t\t\t\theight={33}\r\n\t\t\t\t\t\t\t\tfontWeight={500}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\tlabel={\"그룹 A\"}\r\n\t\t\t\t\t\t\t\tcolor={\"#30374F\"}\r\n\t\t\t\t\t\t\t\twidth={137}\r\n\t\t\t\t\t\t\t\theight={33}\r\n\t\t\t\t\t\t\t\tborder={\"1px solid #C9CCD7\"}\r\n\t\t\t\t\t\t\t\tmarginLeft={64}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</CalendarOptionsWrapper>\r\n\t\t\t\t\t</CalendarHeader>\r\n\t\t\t\t\t<CalendarDateHeader>\r\n\t\t\t\t\t\t<p>일</p>\r\n\t\t\t\t\t\t<p>월</p>\r\n\t\t\t\t\t\t<p>화</p>\r\n\t\t\t\t\t\t<p>수</p>\r\n\t\t\t\t\t\t<p>목</p>\r\n\t\t\t\t\t\t<p>금</p>\r\n\t\t\t\t\t\t<p>토</p>\r\n\t\t\t\t\t</CalendarDateHeader>\r\n\t\t\t\t\t<CalendarBody>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>1</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>2</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>3</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>4</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>5</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>6</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>7</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>1</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>2</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>3</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>4</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>5</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>6</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"day\">\r\n\t\t\t\t\t\t\t\t<p>7</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</CalendarBody>\r\n\t\t\t\t\t<PopuoGroup>\r\n\t\t\t\t\t\t<span className=\"title\">그룹 A</span>\r\n\t\t\t\t\t\t<div className=\"code\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"초대할 사용자 이메일 또는 코드 입력\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tlabel={\"초대\"}\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"#292B33\"\r\n\t\t\t\t\t\t\t\twidth={60}\r\n\t\t\t\t\t\t\t\theight={39}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"link\">\r\n\t\t\t\t\t\t\t<span>링크로 사용자 초대</span>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tlabel={`링크복사`}\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"transparent\"\r\n\t\t\t\t\t\t\t\tcolor=\"#292B33\"\r\n\t\t\t\t\t\t\t\tfontSize={12}\r\n\t\t\t\t\t\t\t\tfontWeight={500}\r\n\t\t\t\t\t\t\t\theight={21}\r\n\t\t\t\t\t\t\t\tlineHeight={15}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<LinkIcon />\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PopuoGroup>\r\n\t\t\t\t</CalendarWrapper>\r\n\t\t\t\t<ScheduleWrapper>\r\n\t\t\t\t\t<ScheduleOptionList>\r\n\t\t\t\t\t\t<li className=\"selected\">일정 후보</li>\r\n\t\t\t\t\t\t<li>오늘 일정</li>\r\n\t\t\t\t\t\t<li>예정</li>\r\n\t\t\t\t\t</ScheduleOptionList>\r\n\t\t\t\t\t<ScheduleControlWrapper>\r\n\t\t\t\t\t\t<div className=\"textWrapper\">\r\n\t\t\t\t\t\t\t<p className=\"title\">일정 후보</p>\r\n\t\t\t\t\t\t\t<p className=\"desc\">함께 일정을 조율해보세요.</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"buttonWrapper\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tlabel={\"일정 후보 추가\"}\r\n\t\t\t\t\t\t\t\twidth={109}\r\n\t\t\t\t\t\t\t\theight={32}\r\n\t\t\t\t\t\t\t\tfontWeight={500}\r\n\t\t\t\t\t\t\t\tbackgroundColor={\"#C9CCD7\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tlabel={\"일정 후보 선택\"}\r\n\t\t\t\t\t\t\t\twidth={109}\r\n\t\t\t\t\t\t\t\theight={32}\r\n\t\t\t\t\t\t\t\tfontWeight={500}\r\n\t\t\t\t\t\t\t\tbackgroundColor=\"#34363C\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ScheduleControlWrapper>\r\n\t\t\t\t\t<EmptySheduleList>\r\n\t\t\t\t\t\t공유한 사용자들에게 일정 후보를\r\n\t\t\t\t\t\t<br /> 먼저 제안해보세요!\r\n\t\t\t\t\t</EmptySheduleList>\r\n\t\t\t\t\t<ScheduleList>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>월요일 회의</p>\r\n\t\t\t\t\t\t\t\t<p>4월 10일 오후 02:00 ~ 오후 04:00</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"arrow\"></div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>월요일 회의</p>\r\n\t\t\t\t\t\t\t\t<p>4월 10일 오후 02:00 ~ 오후 04:00</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"arrow\"></div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>월요일 회의</p>\r\n\t\t\t\t\t\t\t\t<p>4월 10일 오후 02:00 ~ 오후 04:00</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"arrow\"></div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ScheduleList>\r\n\t\t\t\t</ScheduleWrapper>\r\n\t\t\t</MainWrapper>\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 21px 105px 0 76px;\r\n`;\r\n\r\nconst TimeList = styled.ul`\r\n\tdisplay: flex;\r\n\tgap: 20px;\r\n\r\n\t& li {\r\n\t\tfont-weight: 400;\r\n\t\tline-height: 21px;\r\n\t\tcolor: #a3b2c3;\r\n\t\tcursor: pointer;\r\n\r\n\t\t&.active {\r\n\t\t\tcolor: black;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst MainWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-top: 14px;\r\n\tgap: 35px;\r\n`;\r\n\r\nconst CalendarWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex: 1;\r\n`;\r\n\r\nconst CalendarHeader = styled.header`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n`;\r\n\r\nconst CalendarDateHeader = styled.div`\r\n\tmargin-top: 46px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-around;\r\n\r\n\t& p {\r\n\t\tfont-size: 17px;\r\n\t\tfont-weight: 400;\r\n\t\tline-height: 21px;\r\n\t\tcolor: #d1d3dc;\r\n\r\n\t\t&:first-child {\r\n\t\t\tcolor: #ff9797;\r\n\t\t}\r\n\r\n\t\t&:last-child {\r\n\t\t\tcolor: #85a0ff;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CalendarBody = styled.div`\r\n\tmargin-top: 33px;\r\n\r\n\t& div {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(7, 1fr);\r\n\r\n\t\t& div {\r\n\t\t\tposition: relative;\r\n\t\t\twidth: 100%;\r\n\t\t\theight: 0;\r\n\t\t\tpadding-top: 81.04%;\r\n\t\t\tbackground-color: white;\r\n\t\t\tborder: 1px solid #c9ccd7;\r\n\r\n\t\t\t& p {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tleft: 8px;\r\n\t\t\t\ttop: 9px;\r\n\t\t\t\tfont-size: 14px;\r\n\t\t\t\tline-height: 17px;\r\n\t\t\t\tfont-weight: 400;\r\n\t\t\t\tcolor: black;\r\n\t\t\t}\r\n\t\t}\r\n\t\t&:not(:first-child) div {\r\n\t\t\tborder-top: none;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CalendarOptionsWrapper = styled.ul`\r\n\tdisplay: flex;\r\n\tgap: 14px;\r\n`;\r\n\r\nconst UserLists = styled.ul`\r\n\tdisplay: flex;\r\n\tflex-direction: row-reverse;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\tmargin-right: 6px;\r\n\r\n\tli {\r\n\t\twidth: 26px;\r\n\t\theight: 26px;\r\n\t\tborder-radius: 50%;\r\n\t\tborder: 1px solid #60c8c8;\r\n\t\tmargin-right: -6px;\r\n\t\tbackground-color: #eff0f4;\r\n\t\tz-index: 1;\r\n\r\n\t\tspan {\r\n\t\t\t${blind}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst ScheduleWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst ScheduleOptionList = styled.ul`\r\n\tdisplay: table;\r\n\tborder-collapse: collapse;\r\n\theight: 33px;\r\n\tcursor: pointer;\r\n\r\n\t& li {\r\n\t\tdisplay: table-cell;\r\n\t\ttext-align: center;\r\n\t\tvertical-align: middle;\r\n\r\n\t\tbox-sizing: border-box;\r\n\t\twidth: 136px;\r\n\t\tbackground-color: white;\r\n\t\tcolor: #30374f;\r\n\t\tborder: 1px solid #c9ccd7;\r\n\t\t&.selected {\r\n\t\t\tbackground-color: #c9ccd7;\r\n\t\t\tcolor: white;\r\n\t\t\t/* border: none; */\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst ScheduleControlWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tmargin-top: 41px;\r\n\talign-items: flex-start;\r\n\tjustify-content: space-between;\r\n\r\n\t& div.textWrapper {\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t& p.title {\r\n\t\tfont-size: 20px;\r\n\t\tfont-weight: 600;\r\n\t\tline-height: 24px;\r\n\t\tcolor: #313131;\r\n\t}\r\n\r\n\t& p.desc {\r\n\t\tfont-size: 12px;\r\n\t\tfont-weight: 400;\r\n\t\tline-height: 24px;\r\n\t\tcolor: #2f2f2f;\r\n\t\tmargin-left: 13px;\r\n\t}\r\n\r\n\t& div.buttonWrapper {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tgap: 27px;\r\n\t}\r\n`;\r\n\r\nconst EmptySheduleList = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\ttext-align: center;\r\n\tline-height: 17px;\r\n\tfont-size: 14px;\r\n\tcolor: #30374f;\r\n\talign-items: center;\r\n\tborder: 1px solid #c9ccd7;\r\n\theight: 186px;\r\n\tmargin-top: 27px;\r\n\tfont-weight: 500;\r\n`;\r\n\r\nconst ScheduleList = styled.ul`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tmargin-top: 15px;\r\n\tgap: 13px;\r\n\r\n\t& li {\r\n\t\tdisplay: flex;\r\n\t\tflex: 1;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tpadding: 15px 30px 14px 25px;\r\n\t\tborder: 1px solid #c9ccd7;\r\n\r\n\t\t& div {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-direction: column;\r\n\t\t\tfont-size: 14px;\r\n\t\t\tline-height: 17px;\r\n\t\t\tfont-weight: 500;\r\n\t\t\tcolor: #30374f;\r\n\t\t}\r\n\r\n\t\t& .arrow {\r\n\t\t\twidth: 8px;\r\n\t\t\theight: 8px;\r\n\t\t\tborder: solid #30374f;\r\n\t\t\tborder-width: 0 1.5px 1.5px 0;\r\n\t\t\ttransform: rotate(45deg) translateX(-4px);\r\n\t\t\ttransition: transform 0.3s ease;\r\n\r\n\t\t\t&.active {\r\n\t\t\t\ttransform: rotate(225deg);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst PopuoGroup = styled.div`\r\n\t/* position: absolute; */\r\n\tpadding: 21px 20px 22px;\r\n\tbackground: #ffffff;\r\n\tborder: 1px solid #c9ccd7;\r\n\tbox-shadow: 2px 4px 8px #e7e9f0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tfont-size: 14px;\r\n\tfont-weight: 500;\r\n\tline-height: 17px;\r\n\twidth: 421px;\r\n\r\n\tspan.title {\r\n\t\tcolor: #30374f;\r\n\t}\r\n\r\n\tdiv.code {\r\n\t\tdisplay: flex;\r\n\t\tgap: 7px;\r\n\t\tmargin-top: 16px;\r\n\t\talign-items: center;\r\n\t\tinput {\r\n\t\t\theight: 39px;\r\n\t\t\tflex: 1;\r\n\t\t\tbox-sizing: border-box;\r\n\t\t\tpadding-left: 10px;\r\n\t\t\tbackground-color: #f4f6fc;\r\n\t\t\tborder: none;\r\n\r\n\t\t\t&::placeholder {\r\n\t\t\t\tcolor: #9ca0ab;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdiv.link {\r\n\t\tdisplay: flex;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 15px;\r\n\t\talign-items: center;\r\n\t\tmargin-top: 13px;\r\n\t\tborder: 1px solid #ebedf3;\r\n\t\tpadding: 8px 10px;\r\n\r\n\t\tspan {\r\n\t\t\tcolor: #9ca0ab;\r\n\t\t\tflex: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default Main;\r\n","import Navbar from \"@/components/Share/Navbar\";\r\nimport Main from \"@/components/Share/Main\";\r\n\r\nconst SharePage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Navbar />\r\n\t\t\t<Main />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SharePage;\r\n","import y, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport { makeDecorator, addons } from '@storybook/preview-api';\nimport { Route, useLocation, generatePath, createRoutesFromElements, createMemoryRouter, RouterProvider, useParams, useSearchParams, useNavigationType } from 'react-router-dom';\nimport { UNSAFE_RouteContext } from 'react-router';\nimport { STORY_ARGS_UPDATED } from '@storybook/core-events';\n\nvar h=\"storybook/react-router-v6\",I=\"reactRouter\",o={CLEAR:`${h}/clear`,NAVIGATION:`${h}/navigation`,STORY_LOADED:`${h}/story-loaded`,ROUTE_MATCHES:`${h}/route-matches`,ACTION_INVOKED:`${h}/action_invoked`,ACTION_SETTLED:`${h}/action_settled`,LOADER_INVOKED:`${h}/loader_invoked`,LOADER_SETTLED:`${h}/loader_settled`};var b=()=>{let r=useLocation();return `${r.pathname}${r.search}${r.hash}`};var A=y.createContext([]);var O=()=>y.useContext(A);var M=()=>{let r=useRef(0),e=useLocation(),t=useParams(),[a]=useSearchParams(),n=useNavigationType(),s=O(),p={};a.forEach((u,i)=>{p[i]=u;});let m=b(),d=s.map(u=>[u.route.path,u.params]);return u=>{switch(u){case o.STORY_LOADED:{let i={url:m,path:e.pathname,routeParams:t,searchParams:p,routeMatches:d,hash:e.hash,routeState:e.state};return {key:`${o.STORY_LOADED}_${r.current++}`,type:o.STORY_LOADED,data:i}}case o.NAVIGATION:{let i={url:m,path:e.pathname,routeParams:t,searchParams:p,hash:e.hash,routeState:e.state,routeMatches:d,navigationType:n};return {key:`${o.NAVIGATION}_${r.current++}`,type:o.NAVIGATION,data:i}}case o.ROUTE_MATCHES:return {key:`${o.ROUTE_MATCHES}_${r.current++}`,type:o.ROUTE_MATCHES,data:{matches:d}}}}};function F(){let r={};return r.promise=new Promise((e,t)=>{r.resolve=e,r.reject=t;}),r}function Z(r){let e={};return r.forEach((t,a)=>{if(t instanceof File){e[a]={filename:t.name,filesize:t.size,filetype:t.type};return}e[a]=t;}),e}async function N(r){let e=r.clone(),t=e.headers.get(\"content-type\")||\"\",a;switch(!0){case t.startsWith(\"text\"):a=await e.text();break;case t.startsWith(\"application/json\"):a=await e.json();break;case t.startsWith(\"multipart/form-data\"):case t.startsWith(\"application/x-www-form-urlencoded\"):{a=Z(await e.formData());break}default:await e.arrayBuffer().then(s=>s.byteLength);}return a}var V=({children:r})=>{let e=addons.getChannel(),t=useLocation(),[a,n]=useState(),[s,p]=useState(!1),[m,d]=useState([]),u=M(),i=O(),E=useRef(F());return useLayoutEffect(()=>{n(t);}),useEffect(()=>{s&&E.current.resolve();},[s]),useEffect(()=>{d(i);let l=setTimeout(()=>{s||(p(!0),e.emit(o.STORY_LOADED,u(o.STORY_LOADED)));},0);return ()=>clearTimeout(l)},[s,i]),useEffect(()=>{a!==void 0&&a.key!==t.key&&E.current.promise.then(()=>{e.emit(o.NAVIGATION,u(o.NAVIGATION));});},[t]),useEffect(()=>{s&&i.length>m.length&&(d(i),e.emit(o.ROUTE_MATCHES,u(o.ROUTE_MATCHES)));},[i]),y.createElement(y.Fragment,null,r)};var U=({children:r,routePath:e,routeParams:t,searchParams:a,routeState:n,browserPath:s,hydrationData:p})=>{let m=addons.getChannel(),[d,u]=useState(),[i,E]=useState(0),l=useRef();return m.on(STORY_ARGS_UPDATED,()=>{E(f=>f+1);}),useLayoutEffect(()=>{let f=generatePath(e||\"\",t),R=new URLSearchParams(a).toString(),c={search:R.length>0?`?${R}`:\"\",state:n};s!==void 0&&(c.pathname=s),s===void 0&&f!==\"\"&&(c.pathname=f),l.current!==void 0&&Object.assign(c,l.current);let D=createRoutesFromElements(r),T=createMemoryRouter(D,{initialEntries:[c],hydrationData:p});T.subscribe(g=>{l.current=g.location;}),u(T);},[i]),d===void 0?null:y.createElement(RouterProvider,{router:d,fallbackElement:y.createElement(pt,null)})};function pt(){return y.createElement(\"p\",null,\"Performing initial data load\")}var C=()=>async(r,e)=>{switch(r){case o.ACTION_INVOKED:{let{request:t,params:a,context:n}=e,s={url:t.url,method:t.method,body:await N(t)};return {type:o.ACTION_INVOKED,data:{params:a,request:s,context:n}}}case o.ACTION_SETTLED:return {type:o.ACTION_SETTLED,data:e};case o.LOADER_INVOKED:{let{request:t,params:a,context:n}=e,s={url:t.url,method:t.method,body:N(t)};return {type:o.LOADER_INVOKED,data:{params:a,request:s,context:n}}}case o.LOADER_SETTLED:return {type:o.LOADER_SETTLED,data:e}}};var q=({children:r,browserPath:e,routePath:t=\"*\",routeParams:a,routeHandle:n,searchParams:s,routeState:p,outlet:m,hydrationData:d,action:u,loader:i,errorElement:E,shouldRevalidate:l})=>{let f=addons.getChannel(),[R,x]=useState([]);UNSAFE_RouteContext.Provider._context=new Proxy(UNSAFE_RouteContext.Provider._context??{},{set(T,g,S){return g===\"_currentValue\"&&x(w=>S!==void 0&&S.matches.length>w.length?S.matches:w),Reflect.set(T,g,S)}});let c=ht(m)?m:{element:m},D={element:c.element,handle:c.handle,errorElement:c.errorElement,action:c.action!==void 0?j(f,c.action):void 0,loader:c.loader!==void 0?K(f,c.loader):void 0};return y.createElement(A.Provider,{value:R},y.createElement(U,{routePath:t,routeParams:a,routeState:p,searchParams:s,browserPath:e,hydrationData:d},y.createElement(Route,{path:t,handle:n,action:u!==void 0?j(f,u):void 0,loader:i!==void 0?K(f,i):void 0,shouldRevalidate:l,errorElement:E,element:y.createElement(V,null,r)},c.element!==void 0&&c.path===void 0&&y.createElement(Route,{index:!0,...D}),c.element!==void 0&&y.createElement(Route,{path:c.path,...D}))))};function ht(r){return r!==null&&typeof r==\"object\"&&Object.prototype.hasOwnProperty.call(r,\"element\")}function j(r,e){let t=C();return async function(a){if(e===void 0)return;r.emit(o.ACTION_INVOKED,await t(o.ACTION_INVOKED,a));let n=await e(a);return r.emit(o.ACTION_SETTLED,await t(o.ACTION_SETTLED,n)),n}}function K(r,e){let t=C();return async function(a){if(e===void 0)return;r.emit(o.LOADER_INVOKED,await t(o.LOADER_INVOKED,a));let n=await e(a);return r.emit(o.LOADER_SETTLED,await t(o.LOADER_SETTLED,n)),n}}var yt=makeDecorator({name:\"withRouter\",parameterName:I,wrapper:(r,e,{parameters:t={}})=>{let{routePath:a=\"*\",routeParams:n,routeState:s,routeHandle:p,searchParams:m,outlet:d,browserPath:u,loader:i,action:E,errorElement:l,hydrationData:f,shouldRevalidate:R}=t;if(typeof a!=\"string\")throw new Error(\"React Router decorator : `path` must be a string\");if(n!==void 0&&typeof n!=\"object\")throw new Error(\"React Router decorator : `params` must be an object with strings as values\");if(m!==void 0&&typeof m!=\"object\")throw new Error(\"React Router decorator : `search` must be an object with strings as values\");return y.createElement(q,{browserPath:u,routePath:a,routeParams:n,searchParams:m,routeState:s,routeHandle:p,outlet:d,loader:i,action:E,errorElement:l,hydrationData:f,shouldRevalidate:R},r(e))}});\n\nexport { yt as withRouter };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map"],"names":["_extends","target","i","source","key","Action","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","entry","index","createMemoryLocation","clampIndex","action","listener","n","getCurrentLocation","to","state","location","createLocation","warning","createHref","createPath","path","parsePath","nextLocation","delta","nextIndex","fn","invariant","value","message","cond","createKey","current","_ref","pathname","search","hash","parsedPath","hashIndex","searchIndex","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","detectErrorBoundary","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","generatePath","originalPath","params","prefix","array","keyMatch","optional","param","pattern","matcher","paramNames","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","caseSensitive","regexpSource","_","error","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","ErrorResponse","status","statusText","data","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","isBrowser","isServer","defaultDetectErrorBoundary","createRouter","init","dataRoutes","inFlightDataRoutes","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","initialized","m","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","updateBlocker","deleteBlocker","updateState","startNavigation","dispose","deleteFetcher","subscribe","newState","subscriber","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","actionData","loaderData","mergeLoaderData","preventScrollReset","getSavedScrollPosition","navigate","opts","submission","normalizeNavigateOptions","currentLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","pendingActionData","pendingError","findNearestBoundary","actionOutput","handleAction","shortCircuited","errors","handleLoaders","navigation","actionMatch","getTargetMatch","callLoaderOrAction","isRedirectResult","replace","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","overrideNavigation","fetcherSubmission","activeSubmission","matchesToLoad","revalidatingFetchers","getMatchesToLoad","routeId","rf","fetcher","revalidatingFetcher","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","redirect","findRedirect","processLoaderData","deferredData","aborted","markFetchRedirectsDone","didAbortFetchLoads","abortStaleFetchLoads","getFetcher","fetch","href","abortFetcher","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","abortController","fetchRequest","actionResult","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","r","doneFetcher","resolveDeferredData","_temp","_window","isFetchActionRedirect","redirectLocation","url","isDifferentBasename","redirectHistoryAction","formMethod","formAction","formEncType","formData","currentMatches","fetchersToLoad","f","resolveDeferredResults","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","_ref2","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","userMatches","createUseMatchesMatch","_internalSetRoutes","newRoutes","isSubmissionNavigation","isFetcher","isValidMethod","stripHashFromPath","searchParams","convertFormDataToSearchParams","hasNakedIndexQuery","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","history","currentUrl","nextUrl","defaultShouldRevalidate","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","type","isStaticRequest","isRouteRequest","requestContext","resultType","onReject","runHandler","handler","reject","abortPromise","e","isResponse","isSameBasename","activeMatches","resolvedLocation","contentType","isDeferredData","_result$init","_result$init2","signal","processRouteLoaderData","statusCode","foundError","loaderHeaders","newLoaderData","mergedLoaderData","_temp4","method","errorMessage","deferred","isRevalidatingLoader","unwrap","v","pathMatches","isPolyfill","x","is","useState","useEffect","useLayoutEffect","useDebugValue","React","useSyncExternalStore$2","getSnapshot","getServerSnapshot","inst","forceUpdate","checkIfSnapshotChanged","latestGetSnapshot","prevValue","nextValue","useSyncExternalStore$1","canUseDOM","isServerEnvironment","shim","useSyncExternalStore","module","DataRouterContext","React.createContext","DataRouterStateContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","relative","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useNavigationType","useNavigate","routePathnamesJson","UNSAFE_getPathContributingMatches","activeRef","React.useRef","React.useEffect","React.useCallback","useParams","routeMatch","_temp2","React.useMemo","useRoutes","dataRouterStateContext","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","React.createElement","DefaultErrorComponent","useRouteError","stack","preStyles","devInfo","React.Fragment","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","dataRouterContext","dataRouterState","errorIndex","outlet","errorElement","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterState","hookName","useRouteContext","useCurrentRouteId","thisRoute","_state$errors","RouterProvider","fallbackElement","getState","Router","Routes","Route","_props","_ref4","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","_ref5","createRoutesFromChildren","AwaitRenderStatus","React.Children","element","React.isValidElement","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","_excluded","_excluded2","Link","React.forwardRef","ref","onClick","reloadDocument","UNSAFE_NavigationContext","absoluteHref","isExternal","targetUrl","internalOnClick","useLinkClickHandler","handleClick","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","className","style","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","Navbar","Wrapper","jsxs","jsx","Button","styled","theme","blind","css","SvgLinkIcon","Main","TimeList","MainWrapper","CalendarWrapper","CalendarHeader","Select","CalendarOptionsWrapper","UserLists","CalendarDateHeader","CalendarBody","PopuoGroup","LinkIcon","ScheduleWrapper","ScheduleOptionList","ScheduleControlWrapper","EmptySheduleList","ScheduleList","SharePage","Fragment","SharePage$1","makeDecorator","addons","STORY_ARGS_UPDATED","h","I","o","A","O","M","useRef","t","p","u","d","F","Z","N","V","E","l","U","c","D","createRoutesFromElements","T","g","pt","C","q","UNSAFE_RouteContext","S","w","ht","j","K","yt"],"mappings":"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","x_google_ignoreList":[0,1,2,8]}